<div class='product_manager'>
  {{#if error}}
    <p class='error'>{{error}}</p>
  {{else}}
    <div class='header'>
      <h1>Products Management</h1>
      <button onclick='openModal()'>Add New Product</button>
    </div>

    <table>
      <tr>
        <th>ID</th>
        <th>Name</th>
        <th>Price</th>
        <th>Description</th>
        <th>Image</th>
        <th>Action</th>
      </tr>
      {{#each products}}
      <tr>
        <td>{{id}}</td>
        <td>{{name}}</td>
        <td>${{price}}</td>
        <td>{{description}}</td>
        <td><img src='{{image}}' alt='{{name}}' /></td>
        <td>
          <button class='btn-edit' onclick='openEditModal({{id}})'>Edit</button>
          <button class='btn-delete' onclick='deleteProductConfirmation({{id}})'>Delete</button>
        </td>
      </tr>
      {{/each}}
    </table>

    <!-- Edit Product Modal -->
    <div id='editProductModal' class='modal'>
      <div class='modal-content'>
        <span class='close' onclick='closeEditModal()'>&times;</span>
        <h2>Edit Product</h2>
        <form id='editProductForm'>
          <input type='hidden' id='editProductId' name='editProductId' />
          <label for='editProductName'>Product Name:</label>
          <input type='text' id='editProductName' name='editProductName' required />

          <label for='editProductPrice'>Product Price:</label>
          <input type='number' id='editProductPrice' name='editProductPrice' step='0.01' required />

          <label for='editProductDescription'>Product Description:</label>
          <input type='text' id='editProductDescription' name='editProductDescription' required />

          <label for='editProductImage'>Product Image URL:</label>
          <input type='text' id='editProductImage' name='editProductImage' required />

          <button type='button' onclick='saveEditedProduct()'>Save Changes</button>
        </form>
      </div>
    </div>

    <!-- Add Product Modal -->
    <div id='addProductModal' class='modal'>
      <div class='modal-content'>
        <span class='close' onclick='closeModal()'>&times;</span>
        <h2>Add Product</h2>
        <form id='addProductForm'>
          <label for='productName'>Product Name:</label>
          <input type='text' id='productName' name='productName' required />

          <label for='productPrice'>Product Price:</label>
          <input type='number' id='productPrice' name='productPrice' step='0.01' required />

          <label for='productDescription'>Product Description:</label>
          <input type='text' id='productDescription' name='productDescription' required />

          <label for='productImage'>Product Image URL:</label>
          <input type='text' id='productImage' name='productImage' required />

          <button type='button' onclick='addProduct()'>Add Product</button>
        </form>
      </div>
    </div>

    <div id="confirmDelete" class="modal">
      <div class="modal-content">
        <span class="close" onclick="closeDeleteModal()">&times;</span>
        <h2>Are you sure you want to delete this product?</h2>
        <button type="button" onclick="deleteProduct()">Yes</button>
        <button type="button" onclick="closeDeleteModal()">No</button>
      </div>
    </div>

    <script>
      function openModal() {
        document.getElementById('addProductModal').style.display = 'flex';
      }

      function closeModal() {
        document.getElementById('addProductModal').style.display = 'none';
      }

      function openEditModal(productId) {
        fetch(`/admin/products/${productId}`)
          .then(response => response.json())
          .then(product => {
            document.getElementById('editProductId').value = product.id;
            document.getElementById('editProductName').value = product.name;
            document.getElementById('editProductPrice').value = product.price;
            document.getElementById('editProductDescription').value = product.description;
            document.getElementById('editProductImage').value = product.image;
            document.getElementById('editProductModal').style.display = 'flex';
          })
          .catch(error => {
            console.error('Error fetching product details:', error);
          });
      }

      function closeEditModal() {
        document.getElementById('editProductModal').style.display = 'none';
      }

      function saveEditedProduct() {
        const productId = document.getElementById('editProductId').value;
        const editedProductName = document.getElementById('editProductName').value;
        const editedProductPrice = document.getElementById('editProductPrice').value;
        const editedProductDescription = document.getElementById('editProductDescription').value;
        const editedProductImage = document.getElementById('editProductImage').value;

        fetch(`/admin/products/${productId}`, {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            name: editedProductName,
            price: editedProductPrice,
            description: editedProductDescription,
            image: editedProductImage,
          }),
        })
          .then(response => response.json())
          .then(editedProduct => {
            closeEditModal();
            location.reload(true);
          })
          .catch(error => {
            console.error('Error updating product:', error);
          });
      }

      function deleteProductConfirmation(productId) {
        var confirmDelete = confirm("Are you sure you want to delete this product?");
        if (confirmDelete) {
          deleteProduct(productId);
        }
      }

      function deleteProduct(productId) {
        fetch(`/admin/products/${productId}`, {
          method: 'DELETE',
        })
          .then(response => {
            if (!response.ok) {
              throw new Error(`Error deleting product: ${response.statusText}`);
            }
            location.reload(true);
          })
          .catch(error => {
            console.error(error);
          });
      }

      function addProduct(event) {
        const productName = document.getElementById('productName').value;
        const productPrice = document.getElementById('productPrice').value;
        const productDescription = document.getElementById('productDescription').value;
        const productImage = document.getElementById('productImage').value;

        fetch('/admin/products', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            name: productName,
            price: productPrice,
            description: productDescription,
            image: productImage,
          }),
        })
          .then(response => response.json())
          .then(newProduct => {
            location.reload(true);
          })
          .catch(error => {
            console.error('Error adding product:', error);
          });

        closeModal();
      }
    </script>
  {{/if}}
</div>
